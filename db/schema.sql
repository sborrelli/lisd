CREATE TABLE "auth_group" (    "id" integer NOT NULL PRIMARY KEY,    "name" varchar(80) NOT NULL UNIQUE);CREATE TABLE "auth_group_permissions" (    "id" integer NOT NULL PRIMARY KEY,    "group_id" integer NOT NULL,    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"),    UNIQUE ("group_id", "permission_id"));CREATE TABLE "auth_message" (    "id" integer NOT NULL PRIMARY KEY,    "user_id" integer NOT NULL REFERENCES "auth_user" ("id"),    "message" text NOT NULL);CREATE TABLE "auth_permission" (    "id" integer NOT NULL PRIMARY KEY,    "name" varchar(50) NOT NULL,    "content_type_id" integer NOT NULL,    "codename" varchar(100) NOT NULL,    UNIQUE ("content_type_id", "codename"));CREATE TABLE "auth_user" (    "id" integer NOT NULL PRIMARY KEY,    "username" varchar(30) NOT NULL UNIQUE,    "first_name" varchar(30) NOT NULL,    "last_name" varchar(30) NOT NULL,    "email" varchar(75) NOT NULL,    "password" varchar(128) NOT NULL,    "is_staff" bool NOT NULL,    "is_active" bool NOT NULL,    "is_superuser" bool NOT NULL,    "last_login" datetime NOT NULL,    "date_joined" datetime NOT NULL);CREATE TABLE "auth_user_groups" (    "id" integer NOT NULL PRIMARY KEY,    "user_id" integer NOT NULL,    "group_id" integer NOT NULL REFERENCES "auth_group" ("id"),    UNIQUE ("user_id", "group_id"));CREATE TABLE "auth_user_user_permissions" (    "id" integer NOT NULL PRIMARY KEY,    "user_id" integer NOT NULL,    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"),    UNIQUE ("user_id", "permission_id"));CREATE TABLE "django_admin_log" (    "id" integer NOT NULL PRIMARY KEY,    "action_time" datetime NOT NULL,    "user_id" integer NOT NULL REFERENCES "auth_user" ("id"),    "content_type_id" integer REFERENCES "django_content_type" ("id"),    "object_id" text,    "object_repr" varchar(200) NOT NULL,    "action_flag" smallint unsigned NOT NULL,    "change_message" text NOT NULL);CREATE TABLE "django_content_type" (    "id" integer NOT NULL PRIMARY KEY,    "name" varchar(100) NOT NULL,    "app_label" varchar(100) NOT NULL,    "model" varchar(100) NOT NULL,    UNIQUE ("app_label", "model"));CREATE TABLE "django_session" (    "session_key" varchar(40) NOT NULL PRIMARY KEY,    "session_data" text NOT NULL,    "expire_date" datetime NOT NULL);CREATE TABLE "django_site" (    "id" integer NOT NULL PRIMARY KEY,    "domain" varchar(100) NOT NULL,    "name" varchar(50) NOT NULL);CREATE TABLE "lis_courses" (    "course_id" integer NOT NULL PRIMARY KEY,    "academic_field" varchar(20) NOT NULL,    "academic_course_number" varchar(10) NOT NULL,    "instructor" varchar(40) NOT NULL,    "course_location" varchar(20) NOT NULL,    "academic_location" varchar(20) NOT NULL,    "academic_term" varchar(20) NOT NULL,    "snapshot_date" date);CREATE TABLE "lis_courses_students" (    "id" integer NOT NULL PRIMARY KEY,    "course_id" integer NOT NULL,    "student_id" integer NOT NULL,    UNIQUE ("course_id", "student_id"));CREATE TABLE "lis_librarians" (    "librarian_id" integer NOT NULL PRIMARY KEY,    "first_name" varchar(40) NOT NULL,    "last_name" varchar(40) NOT NULL);CREATE TABLE "lis_session_formats" (    "session_format_id" integer NOT NULL PRIMARY KEY,    "format_name" varchar(40) NOT NULL);CREATE TABLE "lis_session_types" (    "session_type_id" integer NOT NULL PRIMARY KEY,    "name" varchar(40) NOT NULL);CREATE TABLE "lis_sessions" (    "session_id" integer NOT NULL PRIMARY KEY,    "date" date,    "librarian_id" integer NOT NULL REFERENCES "lis_librarians" ("librarian_id"),    "session_type_id" integer NOT NULL REFERENCES "lis_session_types" ("session_type_id"),    "location" varchar(40) NOT NULL,    "gov_docs" bool NOT NULL,    "session_format_id" integer NOT NULL,    "course_id" integer NOT NULL REFERENCES "lis_courses" ("course_id"));CREATE TABLE "lis_student_snapshots" (    "student_snapshot_id" integer NOT NULL PRIMARY KEY,    "student_id" integer NOT NULL REFERENCES "lis_students" ("student_id"),    "academic_degree_major" varchar(40) NOT NULL,    "cumulative_gpa" decimal NOT NULL,    "email" varchar(80) NOT NULL,    "phone_1" varchar(20) NOT NULL,    "phone_2" varchar(20) NOT NULL,    "snapshot_date" date,    "address_street_1" varchar(80) NOT NULL,    "address_street_2" varchar(80) NOT NULL,    "address_city" varchar(40) NOT NULL,    "address_state" varchar(20) NOT NULL,    "address_zip" varchar(10) NOT NULL,    "address_business_act_code" varchar(10) NOT NULL);CREATE TABLE "lis_students" (    "student_id" integer NOT NULL PRIMARY KEY,    "last_name" varchar(40) NOT NULL,    "first_name" varchar(40) NOT NULL,    "wsu_id" integer NOT NULL UNIQUE,    "network_id" varchar(40) NOT NULL);CREATE INDEX "auth_group_permissions_425ae3c4" ON "auth_group_permissions" ("group_id");CREATE INDEX "auth_group_permissions_1e014c8f" ON "auth_group_permissions" ("permission_id");CREATE INDEX "auth_message_403f60f" ON "auth_message" ("user_id");CREATE INDEX "auth_permission_1bb8f392" ON "auth_permission" ("content_type_id");CREATE INDEX "auth_user_groups_403f60f" ON "auth_user_groups" ("user_id");CREATE INDEX "auth_user_groups_425ae3c4" ON "auth_user_groups" ("group_id");CREATE INDEX "auth_user_user_permissions_403f60f" ON "auth_user_user_permissions" ("user_id");CREATE INDEX "auth_user_user_permissions_1e014c8f" ON "auth_user_user_permissions" ("permission_id");CREATE INDEX "django_admin_log_403f60f" ON "django_admin_log" ("user_id");CREATE INDEX "django_admin_log_1bb8f392" ON "django_admin_log" ("content_type_id");CREATE INDEX "django_session_3da3d3d8" ON "django_session" ("expire_date");CREATE INDEX "lis_sessions_73602d6f" ON "lis_sessions" ("librarian_id");CREATE INDEX "lis_sessions_413500b9" ON "lis_sessions" ("session_type_id");CREATE INDEX "lis_sessions_783d0d64" ON "lis_sessions" ("session_format_id");CREATE INDEX "lis_sessions_b7271b" ON "lis_sessions" ("course_id");CREATE INDEX "lis_student_snapshots_42ff452e" ON "lis_student_snapshots" ("student_id");